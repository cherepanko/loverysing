import { stripIndent } from 'common-tags';
import random from 'lodash/random';
import { Emoji } from '../../config';
import { UserType } from '../../database';
import { delay, getAllInformation, mainMenuKeyboard } from '../../helpers';
import { vk } from '../../vk';
import { Command } from '../command';

export const toKnowInfo = new Command({
    tag: 'to-know-info',
    trigger: /–£–∑–Ω–∞—Ç—å\s–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é/i,
    rights: UserType.USER,
    handler: async (context) => {
        if (!context.user.hasSubscribe && context.user.balance < 99) {
            return context.command('replenish');
        }

        const [vkUser] = await vk.api.users.get({
            user_ids: context.user.id.toString()
        });

        if (vkUser.is_closed) {
            return context.mainMenu('–î–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ç—Ä–µ–±—É–µ—Ç—Å—è –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏');
        }

        if (!context.user.hasSubscribe) {
            context.user.balance -= 99;
            await context.user.save();
        }

        await context.send(`${Emoji.LOUPE} –ü–æ–∏—Å–∫ –∑–∞–∏—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω–Ω—ã—Ö —Ç–æ–±–æ–π...`);
        await delay(random(1000, 3000));
        await context.send(`${Emoji.LOUPE} –í—ã—á–∏—Å–ª–µ–Ω–∏–µ —Ç–∞–π–Ω—ã—Ö –≥–æ—Å—Ç–µ–π...`);
        await delay(random(1000, 3000));
        await context.send(`${Emoji.LOUPE} –ê–Ω–∞–ª–∏–∑ –ª–∞–π–∫–æ–≤...`);
        await delay(random(1000, 3000));
        await context.send(`${Emoji.LOUPE} –ü–æ–∏—Å–∫ —Å–∞–º–æ–≥–æ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ...`);
        await delay(random(1000, 3000));
        await context.send(`${Emoji.INFO} –ò—Ç–æ–≥–æ–≤—ã–π —Å–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö...`);

        const { interestedUsers, secretGuests, likeUsers, activeUser } = await getAllInformation(context.user);

        await context.send(stripIndent`
${Emoji.OK} –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞ ${Emoji.OK}

–ó–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω—ã —Ç–æ–±–æ–π:
${interestedUsers.length ? interestedUsers.map((user, i) => `${i + 1}. [id${user.id}|${user.first_name} ${user.last_name}]`).join('\n') : '–ù–µ –Ω–∞–π–¥–µ–Ω–æ'}

–¢–∞–π–Ω—ã–µ –≥–æ—Å—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:
${secretGuests.length ? secretGuests.map((user, i) => `${i + 1}. [id${user.id}|${user.first_name} ${user.last_name}]`).join('\n') : '–ù–µ –Ω–∞–π–¥–µ–Ω–æ'}

–ë–æ–ª—å—à–µ –≤—Å–µ–≥–æ –ª–∞–π–∫–∞—é—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É:
${likeUsers.length ? likeUsers.slice(0, 5).map((user, i) => `${i + 1}. [id${user.id}|${user.first_name} ${user.last_name}]`).join('\n') : '–ù–µ –Ω–∞–π–¥–µ–Ω–æ'}

–°–∞–º—ã–π –∞–∫—Ç–∏–≤–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:
${activeUser ? `[id${activeUser.id}|${activeUser.first_name} ${activeUser.last_name}]` : '–ù–µ –Ω–∞–π–¥–µ–Ω–æ'}
        `, {
            keyboard: mainMenuKeyboard(context.user)
        });

        // const buttons = [];

        // for (let i = 0; i < 5; i++) {
        //     buttons.push([
        //         Keyboard.textButton({
        //             label: '‚≠ê'.repeat(i + 1),
        //             color: i === 4 ? 'positive' : 'secondary',
        //             payload: { tag: 'rate' }
        //         })
        //     ]);
        // }

        // return context.send(stripIndent`
        //     –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! üòä
        //     –ü—Ä–æ—Ü–µ—Å—Å –¥–ª–∏–ª—Å—è: ${(Date.now() - start) / 1000} —Å.

        //     –û—Ü–µ–Ω–∏—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ –ø—Ä–æ–≤–µ—Ä–∫–∏:
        // `, {
        //     keyboard: Keyboard.keyboard(buttons)
        // });
    }
});